fn combinations {
    let l = args[0]
    let result = array()
    for x in range(0, sub(len(l), 1)) {
        let ls = slice(l, add(x, 1))
        for y in ls {
            result = push(result, array(l[x], y))
        }
    }

    ret result
}

const PI = 3.14159265358979323
const SOLAR_MASS = mul(4, PI, PI)
const DAYS_PER_YEAR = 365.24

const SYSTEM = array(
    //Sun
    array(array(0.0, 0.0, 0.0), array(0.0, 0.0, 0.0), SOLAR_MASS),
    //Jupiter
    array(array(4.84143144246472090,
                 -1.16032004402742839,
                 //1.03622044471123109e-01
                 -0.103622044471123109),
                array(
                    //1.66007664274403694e-03
                    mul(0.00166007664274403694, DAYS_PER_YEAR),
                 //7.69901118419740425e-03
                 mul(0.00769901118419740425, DAYS_PER_YEAR),
                 //-6.90460016972063023e-05
                 mul(-0.0000690460016972063023, DAYS_PER_YEAR)),
                //9.54791938424326609e-04
                mul(0.000954791938424326609, SOLAR_MASS)),
    //Saturn
    array(array(8.34336671824457987,
                4.12479856412430479,
                //-4.03523417114321381e-01
                -0.403523417114321381),
                //-2.76742510726862411e-03
               array(mul(-0.00276742510726862411, DAYS_PER_YEAR),
                //4.99852801234917238e-03
                mul(0.00499852801234917238, DAYS_PER_YEAR),
                //2.30417297573763929e-05
                mul(0.0000230417297573763929, DAYS_PER_YEAR)),
               //2.85885980666130812e-04
               mul(0.000285885980666130812, SOLAR_MASS)),
    //Uranus
    //1.28943695621391310e+01
    array(array(12.8943695621391310,
    //-1.51111514016986312e+01
                -15.1111514016986312,
                //-2.23307578892655734e-01
                -0.223307578892655734),
                //2.96460137564761618e-03
               array(mul(0.00296460137564761618, DAYS_PER_YEAR),
                //2.37847173959480950e-03
                mul(0.00237847173959480950, DAYS_PER_YEAR),
                //-2.96589568540237556e-05
                mul(-0.0000296589568540237556, DAYS_PER_YEAR)),
               //4.36624404335156298e-05
               mul(0.0000436624404335156298, SOLAR_MASS)),
    //Neptune
    //1.53796971148509165e+01
    array(array(15.3796971148509165,
                //-2.59193146099879641e+01
                 -25.9193146099879641,
                 //1.79258772950371181e-01
                 0.179258772950371181),
                //2.68067772490389322e-03
                array(mul(0.00268067772490389322, DAYS_PER_YEAR),
                 //1.62824170038242295e-03
                 mul(0.00162824170038242295, DAYS_PER_YEAR),
                 //-9.51592254519715870e-05
                 mul(-0.0000951592254519715870, DAYS_PER_YEAR),
                //-9.51592254519715870e-05
                mul(0.0000515138902046611451, SOLAR_MASS))
    )
)

const PAIRS = combinations(SYSTEM) 

fn sqr {
    pow(args[0], 2)
}

fn advance {
    let dt = args[0]
    let n = args[1]
    for i in range(0, n) {
        for x in PAIRS {
            let dx = sub(x[0][0][0], x[1][0][0])
            let dy = sub(x[0][0][1], x[1][0][1])
            let dz = sub(x[0][0][2], x[1][0][2])
            let mag = mul(dt, pow(add(sqr(dx), sqr(dy), sqr(dz)), -1.5))
            let b1m = mul(x[0][2], mag)
            let b2m = mul(x[1][2], mag)
            
        }
    }
}
